version: '3.8'

services:
  # Serviço do backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cursera-backend
    restart: always
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_URL=${FRONTEND_URL:-http://frontend}
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - cursera-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Serviço do frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cursera-frontend
    restart: always
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=/api
    depends_on:
      - backend
    networks:
      - cursera-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Serviço de proxy reverso (opcional, para produção com HTTPS)
  # nginx-proxy:
  #   image: nginxproxy/nginx-proxy
  #   container_name: cursera-nginx-proxy
  #   restart: always
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #     - ./nginx-proxy/certs:/etc/nginx/certs
  #     - ./nginx-proxy/vhost.d:/etc/nginx/vhost.d
  #     - ./nginx-proxy/html:/usr/share/nginx/html
  #   networks:
  #     - cursera-network

  # Serviço para Let's Encrypt (opcional, para certificados SSL automáticos)
  # letsencrypt:
  #   image: nginxproxy/acme-companion
  #   container_name: cursera-letsencrypt
  #   restart: always
  #   environment:
  #     - DEFAULT_EMAIL=${LETSENCRYPT_EMAIL:-admin@example.com}
  #   volumes_from:
  #     - nginx-proxy
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - ./nginx-proxy/acme:/etc/acme.sh
  #   depends_on:
  #     - nginx-proxy
  #   networks:
  #     - cursera-network

networks:
  cursera-network:
    driver: bridge
